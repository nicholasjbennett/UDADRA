// per http://www.projectrho.com/public_html/rocket/lifesupport.php
+PART[largeSolarPanel]
{
	@name = UDA_SOYLENT_RED_GIGANTOR
	@author = DBowman
	@title = UDA Soylent Red Gigantor
	@manufacturer = UberDyne Astronautics
	@description = Sterile Organic Slurry + light = Algae Slurry = Yum! <i><b>Soylent Red</b></i> is an optimistic view on what is possible running algae through polymer channels. Sit this big baby in the sun all day and it will convert all of 11 Kerbals seterilized wastes into O2, water, & edible Soylent. To keep keep the algae hygenic you have to run the waste through a SuperCritical Water Oxidizer Unit before feeding it to the algae.

	// 0.3 + 100 structure + 90 H2O + 25 to sep Food, Water, Oxygen
	// H2O is present but no available for TAC etc - so not represented as a resource
	@mass = 0.515

	-mesh = model.mu
	MODEL
	{
		model = Squad/Parts/Electrical/gigantorXlSolarArray/model
		texture = model000,UberDyneAstronautics/Soylent/gigantorSoylentRed/model000.r
	}
	
	@MODULE[ModuleDeployableSolarPanel]
	{
		@resourceName = Photons
		@chargeRate = 2.75 // =79Bm all Jool not Eeloo, 0.3=88Bm, 0.2 good to 72Bm, 0.1 good to 50Bm, 0.01 good to 16Bm
	}

	MODULE:NEEDS[TACLifeSupport]
	{
		name = TacGenericConverter
		converterName = Soylent Bioreactor 

		// A scaling factor by which the resource amounts are multiplied
		conversionRate = 11.22 // 1000 //8.16

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		inputResources = ElectricCharge, 0.07123842592593, SterileOrganicSlurry, 0.00001578703704, CarbonDioxide, 0.001480128899, SoylentStarter, 0.00000001692708333
		//inputResources = ElectricCharge, 0.07123842592593, Photons, 0.007123842592593, SterileOrganicSlurry, 0.00001578703704, CarbonDioxide, 0.001480128899, SoylentStarter, 0.00000001692708333
// uses more charge for more pumping

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		outputResources = Water, 0.000011188078704, false, Food, 0.000016927083333, false, Oxygen, 0.001713537562385, false
	}
	RESOURCE
	{
		name = Photons
		amount = 0
		maxAmount = 0.1
	}

// for testing
//	RESOURCE
//	{
//		name = Water
//		amount = 90 
//		maxAmount = 90
//isTweakable = false
//	}
//	RESOURCE
//	{
//		name = SterileOrganicSlurry
//		amount = 0
//		maxAmount = 6
//	}
//	RESOURCE
//	{
//		name = CarbonDioxide
//		amount = 500
//		maxAmount = 1000
//	}
//	RESOURCE
//	{
//		name = Food
//		amount = 5
//		maxAmount = 10
//	}
//	RESOURCE
//	{
//		name = Oxygen
//		amount = 500
//		maxAmount = 1000
//	}
//	RESOURCE
//	{
//		name = SoylentStarter
//		amount = 5
//		maxAmount = 10
//	}

}
